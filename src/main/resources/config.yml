#
# __      _______                                          _ _____
# \ \    / / ____|                                        | |  __ \
#  \ \  / / |     ___  _ __ ___  _ __ ___   __ _ _ __   __| | |__) |_ _ _ __ ___  ___ _ __
#   \ \/ /| |    / _ \| '_ ` _ \| '_ ` _ \ / _` | '_ \ / _` |  ___/ _` | '__/ __|/ _ \ '__|
#    \  / | |___| (_) | | | | | | | | | | | (_| | | | | (_| | |  | (_| | |  \__ \  __/ |
#     \/   \_____\___/|_| |_| |_|_| |_| |_|\__,_|_| |_|\__,_|_|   \__,_|_|  |___/\___|_|
#
#

#
#  <==> VCommandParser Config File <==>
# Run `/vcommandparser reload` to load the changes.
# If you ever wish to reset the config, simply delete the file and run `/vcommandparser reload` to regenerate the file.
#

messages: # Here you can edit the messages sent by VCommandParser. The messages use MiniMessage formatting (NOT strict).
  parsing.too_many_args: <red>You provided too many arguments.
  parsing.too_few_args: <red>You are missing some arguments.
  arg.float.invalid: <red>You provided an invalid number.
  arg.integer.invalid: <red>You provided an invalid integer.
  arg.option.invalid: <red>That is not a valid option.
  arg.string.no_close: <red>A string was not closed. Add a quote to close it (").

server-hook-enabled: false # Whether server hooks are enabled. Server hooks are intended to be used by servers with their own custom plugins. It allows certain VCommandParser functionality to be changed to more fit the server.


# The line below tells VCommandParser the version of this config file. It should NOT be modified by hand.
config-version: 1
